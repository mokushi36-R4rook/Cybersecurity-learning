# 学習ログ / Study Log  
**日付（JST）/ Date:** 2025/09/23

---

## 学習テーマ / Topic  
**tryhackme — How Websites Work**  

---

## 目的 / Goal (JP → EN one-liner)  
**JP:** ウェブサイトの仕組み（ブラウザ・サーバ・プロトコル・レンダリングなど）の全体像を掴む  
**EN:** Get a high-level understanding of how websites work (browser, server, protocols, rendering).

---

## 今日やったこと（一次メモ）  
- TryHackMe の “How Websites Work” を通して演習を実施。  
- HTML や JavaScript といった技術要素が実際にページを動かしていることを確認。  
- ただし、各要素同士（DNS → TCP → HTTP → TLS → ブラウザレンダリング → DOM → JS 実行）の関係性の理解が浅いと感じた。  
- 現時点では「部分的に見えているが、全体像が結びついていない」ことを自覚。

---

## 自分の理解で怪しい所（要修正ポイント） — 指摘と正しい説明
1. **ブラウザとサーバの役割**  
   - 誤解: 「HTML / JS が動いている＝ウェブ全体を理解した」  
   - 正しい説明: ブラウザはクライアント、サーバは応答側。ブラウザはリクエストを送り、サーバがHTMLやデータを返し、ブラウザが表示する。

2. **DNS と IP の関係**  
   - 正しい説明: ドメイン名はDNSでIPに変換されてから接続が行われる。

3. **TCP / HTTP / TLS の順序**  
   - 正しい説明: DNS解決 → TCP接続 → TLSハンドシェイク（HTTPSの場合） → HTTPリクエスト/レスポンス。

4. **レンダリングと DOM の違い**  
   - 正しい説明: HTMLはDOMツリーに変換され、CSSでレンダリングされ、JavaScriptがDOMを動的に変更する。

5. **JS の実行タイミング**  
   - 正しい説明: 要素が存在する前にJSを実行するとエラーになる。`DOMContentLoaded` や `<script defer>` で回避。

6. **セキュリティ（CORS / HTTPS の基礎）**  
   - 正しい説明: 外部リソースは同一生成元ポリシーで制限される。HTTPSは暗号化と証明書検証を提供。

---

## 英語の簡単要約 / Short English Summary  
I studied TryHackMe's "How Websites Work" room. I confirmed that HTML and JavaScript are pieces that make pages interactive, but I need to better connect concepts like DNS, TCP/TLS, HTTP, browser rendering (DOM/CSS), and JS execution timing to form a coherent mental model.

---

## 成果物（コード / 図 / ノート）  
### 最小動作コード（DOM操作の例）
```html
<!DOCTYPE html>
<html>
  <head><meta charset="utf-8"><title>Demo</title></head>
  <body>
    <div id="demo">Hi there!</div>

    <script>
      document.getElementById('demo').textContent = 'Hack the Planet';
    </script>
  </body>
</html>
